@import './variables.scss';

// Ui Elements
button {
  background: $primary-color;
  color: $surface-color;
  border: none;
  border-radius: $border-radius-small;
  padding: $spacing-small $spacing-medium;
  font-size: $font-size-medium;
  cursor: pointer;
  transition: $transition-medium;
  align-items: center;
  display: flex;
  gap: $spacing-small;

  .icon {
    font-size: 1.2rem;
  }

  &:hover {
    background: $primary-color-dark; /* Darker primary color on hover */
  }
}

input[type="checkbox"] {
  position: relative;
  appearance: none; /* Remove default checkbox appearance */
  width: 40px; /* Adjust the width of the switch */
  height: 20px; /* Adjust the height of the switch */
  background-color: $shade-dark; /* Background color when unchecked */
  border-radius: $border-radius-small; /* Make it round */
  cursor: pointer; /* Change cursor to pointer */
  border: $border-width-thin solid $border-color;

  &:checked {
    background-color: $primary-color; /* Background color when checked */
  }

  &::before {
    content: "";
    position: absolute;
    top: 1px; /* Adjust the vertical position */
    left: 2px; /* Adjust the horizontal position */
    width: 16px; /* Width of the switch handle */
    height: 16px; /* Height of the switch handle */
    background-color: $surface-color; /* Color of the switch handle */
    border-radius: 50%; /* Make it round */
    transition: $transition-medium; /* Add a smooth transition effect */
  }

  &:checked::before {
    transform: translateX(20px); /* Move the switch handle to the right when checked */
  }
}

textarea {
  width: 100%;
  padding: $spacing-small;
  border: $border-width-thin solid $border-color;
  border-radius: $border-radius-small;
  font-size: $font-size-medium;
  background-color: $shade-light;
  height: 100px;
  resize: none;
}

.btn-container {
  display: flex;
  width: 100%;
  justify-content: flex-end;

  @media (max-width: $breakpoint-md) {
    button {
      width: 100%;
    }
  }
}

.chip {
  border-radius: 50px;
  font-weight: $font-weight-bold;
  padding: 5px 10px;
  display: flex;
  width: fit-content;

  &.green {
    background-color: rgba($success-color, 0.2);
    color: $success-color;
  }

  &.red {
    background-color: rgba($danger-color, 0.2);
    color: $danger-color;
  }

  &.yellow {
    background-color: rgba($warning-color, 0.2);
    color: $warning-color;
  }
}

.table-wrapper {
  overflow-x: auto;
  box-shadow: $box-shadow-light;
  border-radius: $border-radius-small;
  background-color: $surface-color;
}

.record-wrapper {
  overflow-x: auto;
}

.record-actions {
  display: flex;
  align-items: center;
  gap: $spacing-small;
  width: fit-content;

  /* Ensure buttons have consistent height and alignment */
  button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: $spacing-small $spacing-medium; /* Adjust padding as needed */
    border: none;
    background-color: $primary-color;
    color: $surface-color;
    border-radius: $border-radius-small;
    cursor: pointer;
    transition: background-color $transition-medium;

    &:hover {
      background-color: $primary-color-dark;
    }

    .icon {
      margin-right: $spacing-small;
    }
  }
}

// Inventory list for Items and Locations
.inventory-list {
}

.inventory-records-list {
  list-style-type: none;
  background-color: $surface-color;
  border: $border-width-thin solid $border-color;
  //box-shadow: $box-shadow-light;
  padding: $spacing-small;
  margin-bottom: $spacing-medium;
  border-radius: $border-radius-small;
}
